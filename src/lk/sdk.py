"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from .authentication import Authentication
from .order import Order
from .order_status import OrderStatus
from .order_ticket import OrderTicket
from .sdkconfiguration import SDKConfiguration
from lk import utils

class Lk:
    r"""Merchant Center API: API for EVA marketplace backoffice. <br><br> Other documentation: <br><ul><li><a href=\\"https://eva-product.atlassian.net/wiki/spaces/EVA/pages/107020299/Marketplace\\">Internal project docs</a></li><li><a href=\\"/redoc\\">Reference Documentation</a></li></ul><br>Request is succeeded if response code is 200 and response JSON contains `{\\"success\\": true, ...}`"""
    authentication: Authentication
    order: Order
    order_status: OrderStatus
    order_ticket: OrderTicket

    sdk_configuration: SDKConfiguration

    def __init__(self,
                 server_idx: int = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_idx: The index of the server to use for all operations
        :type server_idx: int
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        if client is None:
            client = requests_http.Session()
        
        security_client = client
        
        if server_url is not None:
            if url_params is not None:
                server_url = utils.template_url(server_url, url_params)

        self.sdk_configuration = SDKConfiguration(client, security_client, server_url, server_idx)
       
        self._init_sdks()
    
    def _init_sdks(self):
        self.authentication = Authentication(self.sdk_configuration)
        self.order = Order(self.sdk_configuration)
        self.order_status = OrderStatus(self.sdk_configuration)
        self.order_ticket = OrderTicket(self.sdk_configuration)
    