"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import nppackstation as shared_nppackstation
from ..shared import recipient as shared_recipient
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from lk import utils
from typing import Optional

class ShippingMethod(str, Enum):
    NOVAPOSHTA_PACKSTATION = 'novaposhta_packstation'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Shipping:
    r"""Represents info about shipping order"""
    address: shared_nppackstation.NPPackStation = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})
    r"""Represents info about shipping via `Nova Posta PackStation` method"""
    method: ShippingMethod = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method') }})
    recipient: shared_recipient.Recipient = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient') }})
    r"""Represents info about recipient"""
    price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    

