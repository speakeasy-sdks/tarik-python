"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import orderticketstatus as shared_orderticketstatus
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from lk import utils
from marshmallow import fields


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class OrderTicket:
    decision: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decision') }})
    r"""Decision"""
    order_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('order_id') }})
    r"""Marketplace Order ID"""
    solution_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('solution_time'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Format YYYY-MM-DD[T]HH:MM"""
    status: shared_orderticketstatus.OrderTicketStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status"""
    ticket_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ticket_id') }})
    r"""BPM ticket ID"""
    

