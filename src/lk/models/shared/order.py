"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import customer as shared_customer
from ..shared import item as shared_item
from ..shared import payment as shared_payment
from ..shared import shipping as shared_shipping
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from lk import utils
from marshmallow import fields


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Order:
    r"""Represents full info about order"""
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Format YYYY-MM-DD[T]HH:MM"""
    customer: shared_customer.Customer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer') }})
    r"""Represents info about order customer"""
    items: list[shared_item.Item] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items') }})
    merchant_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchant_id') }})
    r"""This field could be numeric string"""
    order_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('order_id') }})
    r"""This field could be numeric string"""
    payment: shared_payment.Payment = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment') }})
    r"""Represents info about order payment"""
    shipping: shared_shipping.Shipping = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping') }})
    r"""Represents info about shipping order"""
    

