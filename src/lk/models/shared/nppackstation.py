"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import street as shared_street
from dataclasses_json import Undefined, dataclass_json
from lk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NPPackStation:
    r"""Represents info about shipping via `Nova Posta PackStation` method"""
    
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})
    city_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city_id') }})
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})
    region: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region') }})
    region_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region_id') }})
    settlement_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settlement_description') }})
    settlement_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settlement_type') }})
    street: shared_street.Street = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('street') }})
    r"""Represents info about street"""
    warehouse_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouse_id') }})
    warehouse_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouse_number') }})
    r"""This field could be numeric string"""
    