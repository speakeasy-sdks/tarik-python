"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from .sdkconfiguration import SDKConfiguration
from lk import utils
from lk.models import operations, shared
from typing import Optional

class OrderStatus:
    sdk_configuration: SDKConfiguration

    def __init__(self, sdk_config: SDKConfiguration) -> None:
        self.sdk_configuration = sdk_config
        
    
    def status_request_validated_api_v1_orders_order_id_status_request_post(self, request: operations.StatusRequestValidatedAPIV1OrdersOrderIDStatusRequestPostRequest, security: operations.StatusRequestValidatedAPIV1OrdersOrderIDStatusRequestPostSecurity) -> operations.StatusRequestValidatedAPIV1OrdersOrderIDStatusRequestPostResponse:
        r"""Send order status request"""
        base_url = utils.template_url(*self.sdk_configuration.get_server_details())
        
        url = utils.generate_url(operations.StatusRequestValidatedAPIV1OrdersOrderIDStatusRequestPostRequest, base_url, '/api/v1/orders/{order_id}/status-request', request)
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "order_status", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        if data is None and form is None:
            raise Exception('request body is required')
        headers['Accept'] = 'application/json;q=1, application/json;q=0'
        headers['user-agent'] = f'speakeasy-sdk/{self.sdk_configuration.language} {self.sdk_configuration.sdk_version} {self.sdk_configuration.gen_version} {self.sdk_configuration.openapi_doc_version}'
        
        client = utils.configure_security_client(self.sdk_configuration.client, security)
        
        http_res = client.request('POST', url, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.StatusRequestValidatedAPIV1OrdersOrderIDStatusRequestPostResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Response])
                res.response = out
        elif http_res.status_code == 401:
            pass
        elif http_res.status_code == 422:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.HTTPValidationError])
                res.http_validation_error = out

        return res

    
    def status_schema_api_v1_orders_status_schema_get(self) -> operations.StatusSchemaAPIV1OrdersStatusSchemaGetResponse:
        r"""Get JSON schema for order status"""
        base_url = utils.template_url(*self.sdk_configuration.get_server_details())
        
        url = base_url + '/api/v1/orders/status/schema'
        headers = {}
        headers['Accept'] = 'application/json'
        headers['user-agent'] = f'speakeasy-sdk/{self.sdk_configuration.language} {self.sdk_configuration.sdk_version} {self.sdk_configuration.gen_version} {self.sdk_configuration.openapi_doc_version}'
        
        client = self.sdk_configuration.client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.StatusSchemaAPIV1OrdersStatusSchemaGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Response])
                res.response = out
        elif http_res.status_code == 401:
            pass

        return res

    
    def status_validated_api_v1_orders_order_id_status_post(self, request: operations.StatusValidatedAPIV1OrdersOrderIDStatusPostRequest, security: operations.StatusValidatedAPIV1OrdersOrderIDStatusPostSecurity) -> operations.StatusValidatedAPIV1OrdersOrderIDStatusPostResponse:
        r"""Set order status"""
        base_url = utils.template_url(*self.sdk_configuration.get_server_details())
        
        url = utils.generate_url(operations.StatusValidatedAPIV1OrdersOrderIDStatusPostRequest, base_url, '/api/v1/orders/{order_id}/status', request)
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "order_status", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        if data is None and form is None:
            raise Exception('request body is required')
        headers['Accept'] = 'application/json;q=1, application/json;q=0'
        headers['user-agent'] = f'speakeasy-sdk/{self.sdk_configuration.language} {self.sdk_configuration.sdk_version} {self.sdk_configuration.gen_version} {self.sdk_configuration.openapi_doc_version}'
        
        client = utils.configure_security_client(self.sdk_configuration.client, security)
        
        http_res = client.request('POST', url, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.StatusValidatedAPIV1OrdersOrderIDStatusPostResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Response])
                res.response = out
        elif http_res.status_code == 401:
            pass
        elif http_res.status_code == 422:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.HTTPValidationError])
                res.http_validation_error = out

        return res

    